// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pandalicious.Models;

namespace Pandalicious.Migrations
{
    [DbContext(typeof(Model.PandaliciousContext))]
    [Migration("20191006204452_UpdateDB")]
    partial class UpdateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Pandalicious.Models.Direction", b =>
                {
                    b.Property<int>("DirectionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DirectionDescription");

                    b.Property<int>("DirectionStep");

                    b.HasKey("DirectionId");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("Pandalicious.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<string>("IngredientName")
                        .IsRequired();

                    b.Property<string>("IngredientUnit");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Pandalicious.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IngredientId");

                    b.Property<string>("MenuUnit");

                    b.Property<string>("MenuValue");

                    b.Property<int>("RecipeId");

                    b.HasKey("MenuId");

                    b.HasIndex("IngredientId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Pandalicious.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RecipeDuration");

                    b.Property<string>("RecipeName");

                    b.Property<string>("RecipeNotes");

                    b.Property<int>("RecipeServings");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Pandalicious.Models.RecipeDirections", b =>
                {
                    b.Property<int>("RecipeDirectionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DirectionId");

                    b.Property<int>("RecipeId");

                    b.HasKey("RecipeDirectionId");

                    b.HasIndex("DirectionId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeDirections");
                });

            modelBuilder.Entity("Pandalicious.Models.RecipeTags", b =>
                {
                    b.Property<int>("RecipeTagId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecipeId");

                    b.Property<int>("TagId");

                    b.HasKey("RecipeTagId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipeTags");
                });

            modelBuilder.Entity("Pandalicious.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TagName");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Pandalicious.Models.Menu", b =>
                {
                    b.HasOne("Pandalicious.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pandalicious.Models.RecipeDirections", b =>
                {
                    b.HasOne("Pandalicious.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pandalicious.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pandalicious.Models.RecipeTags", b =>
                {
                    b.HasOne("Pandalicious.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Pandalicious.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
